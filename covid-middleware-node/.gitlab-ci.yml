image: docker:latest
services:
  - docker:18.09-dind

stages:
  - tests
  - build
  - staging
  - production

variables:
  DOCKER_HOST: tcp://localhost:2375
  POSTGRES_DB: "covid-bert"
  POSTGRES_USER: "covid-bert"
  POSTGRES_PASSWORD: ""
  # sequelize migration config
  CI_DB_USERNAME: "covid-bert"
  CI_DB_PASSWORD: ""
  CI_DB_NAME: "covid-bert"
  CI_DB_HOSTNAME: "127.0.0.1"

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

tests:
   image: node:10-jessie
   services:
     - postgres:alpine
   before_script: []
   stage: tests
   script:
     - npm install
     - npm install -g sequelize-cli
     - sequelize db:migrate --env=test
 #    - sequelize db:seed:all  --env=test #seeders to not exist?
     - npm run lint
     - npm run cov

build:
  stage: build
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF .
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF
  only:
    - develop
    - master

.kubectl: &kubectl
  - echo "$CERTIFICATE_AUTHORITY_DATA" > ca-auth.pem
  - kubectl config set-cluster deepannotate-eks --server="$SERVER"
  - kubectl config set-cluster deepannotate-eks --embed-certs --certificate-authority=ca-auth.pem
  - kubectl config set-credentials gitlab --token="$USER_TOKEN"
  - kubectl config set-context default --cluster=deepannotate-eks --user=gitlab
  - kubectl config use-context default

.staging_deploy: &staging_deploy
  image: dtzar/helm-kubectl
  stage: staging
  environment: staging
  before_script: *kubectl
  script:
    - kubectl patch deployment covid-middleware -n covid-staging -p '{"spec":{"template":{"spec":{"containers":[{"name":"'"covid-middleware"'","image":"'"$CI_REGISTRY_IMAGE:$CI_BUILD_REF"'"}]}}}}'

deploy to staging:
  <<: *staging_deploy
  only:
    - develop

.production_deploy: &production_deploy
  image: dtzar/helm-kubectl
  stage: production
  environment: production
  before_script: *kubectl
  script:
    - kubectl patch deployment covid-middleware -n covid-production -p '{"spec":{"template":{"spec":{"containers":[{"name":"'"covid-middleware"'","image":"'"$CI_REGISTRY_IMAGE:$CI_BUILD_REF"'"}]}}}}'

deploy to production:
  <<: *production_deploy
  only:
    - master
